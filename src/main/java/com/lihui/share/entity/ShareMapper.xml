<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"   
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd" > 
<mapper namespace="com.lihui.share.dao.IShareDao">
	<!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题
	<result property="userId" column="u_id" jdbcType="INTEGER" javaType="int"/>
	-->
	<resultMap type="com.lihui.share.entity.Share" id="shareResultMap">
        <id property="shareId" column="s_id" jdbcType="INTEGER" javaType="int"/>
        <result property="type" column="type" jdbcType="VARCHAR" javaType="String"/>
        <result property="subject" column="subject" jdbcType="VARCHAR" javaType="String"/>
        <result property="content" column="content" jdbcType="VARCHAR" javaType="String"/>
        
        <result property="shareDate" column="s_time" jdbcType="DATE" javaType="String"/>
        <result property="attachements" column="attachments" jdbcType="VARCHAR" javaType="String"/>
        <result property="grade" column="grade" jdbcType="DOUBLE" javaType="double"/>
        <result property="studentNum" column="stu_num" jdbcType="INTEGER" javaType="int"/>
        <result property="grade_num" column="grade_num" jdbcType="INTEGER" javaType="int"/>
        <result property="adGrade" column="ad_grade" jdbcType="INTEGER" javaType="int"/>
        <result property="lastModifyTime" column="lastmodifytime" jdbcType="TIMESTAMP" javaType="String"/>  
        <!--一对一关联用 association标签-->
        <association column="u_id" property="auther" javaType="com.lihui.share.entity.User">
			<id column="user_id" property="user_id"/>
			<result column="loginame" property="loginame"/>
			<result column="name" property="name"/>
			<result column="sex" property="sex"/>
			<result column="emp_id" property="emp_id"/>
			<result column="pwd" property="pwd"/>
			<result column="email" property="email"/>
			<result column="tel" property="tel"/>
			<result column="addr" property="addr"/>
			<result column="company" property="company"/>
			<result column="dept" property="dept"/>
			<result column="project" property="project"/>
			<result column="position" property="position"/>
			<result column="level" property="level"/>
			<result column="hiredate" property="hiredate"/>
		</association> 
		<!--
		<association column="s_id" property="shareGrade" javaType="com.lihui.share.entity.ShareGrade">
			<id column="grade_id" property="grade_id"/>
			<result column="grade_id" property="grade_id"/>
			<result column="share_id" property="shareId"/>
			<result column="us_id" property="userId"/>
			<result column="u_grade" property="grade"/>
		</association> 
		-->
		<!--一对多关联用 collection标签对应Bean中的List<ShareGrade>集合-->
		<collection property="userGrades" ofType="com.lihui.share.entity.ShareGrade">
            <id property="grade_id" column="grade_id"/>
        <result property="shareId" column="share_id"/>
        <result property="userId" column="us_id"/>
        <result property="grade" column="u_grade"/>
        </collection>
              
    </resultMap> 
	<select id="queryAllShareByAdmin" resultMap="shareResultMap">
		select s.s_id,s.type,s.subject,s.content,date_format(s.s_time,'%Y-%m-%d') as 's_time',s.attachments,s.grade,s.stu_num,s.grade_num,
		s.ad_grade,date_format(s.lastmodifytime,'%Y-%m-%d %h:%i %p') as 'lastmodifytime' ,u.* from t_share s,t_user u 
		where u.user_id = s.u_id 
		order by s.s_time DESC limit #{start},#{end}
	</select>
	<select id="queryShareByPage" resultMap="shareResultMap">
		select s_id,type,subject,content,u_id,date_format(s_time,'%Y-%m-%d') as 's_time',attachments,grade,stu_num,grade_num,ad_grade
		date_format(lastmodifytime,'%Y-%m-%d %h:%i %p') as 'lastmodifytime' from t_share
		order by s_id DESC limit #{start},#{end}
	</select>
	
	<select id="queryOthersShareByPage" resultMap="shareResultMap">
		<!--写了好多个版本。。。。
		select s.s_id,s.type,s.subject,s.content,s.s_time,s.attachments,s.grade,s.stu_num,s.grade_num,s.ad_grade,u.*,g.*
		 from 
		t_share s, t_user u ,t_grade g
		where s.u_id=u.user_id and s.u_id != #{userId} and s.s_id = g.share_id and g.us_id = #{userId} order by s_id DESC limit #{start},#{end}
		-->
		<!--
		select s.s_id,s.type,s.subject,s.content,s.s_time,s.attachments,s.grade,s.stu_num,s.grade_num,s.ad_grade,u.*,g.*
		 from 
		t_share s
		left join t_user u on s.u_id=u.user_id 
	left join t_grade g on s.s_id = g.share_id
    where s.u_id != #{userId}
		order by s.s_id DESC limit #{start},#{end}
		-->
		<!--
		select t.*,u.* from (select s.s_id,s.u_id,s.type,s.subject,s.content,s.s_time,s.attachments,s.grade,s.stu_num,s.grade_num,s.ad_grade,g.*
		 from 
			t_share s
				left join t_grade g on s.s_id = g.share_id
					and g.us_id = #{userId}
					and s.u_id != #{userId} where 1= 1
					order by g.u_grade desc ) t,
					t_user u where t.u_id = u.user_id
					limit #{start},#{end}
		 -->
		select t.*,u.* from (select s.s_id,s.u_id,s.type,s.subject,s.content,date_format(s.s_time,'%Y-%m-%d') as 's_time',
		date_format(s.lastmodifytime,'%Y-%m-%d %h:%i %p') as 'lastmodifytime',
		s.attachments,s.grade,s.stu_num,s.grade_num,s.ad_grade,g.*
		 from 
			t_share s
				left join t_grade g on s.s_id = g.share_id
					and g.us_id = #{userId}
					 where s.u_id != #{userId}
					order by g.u_grade desc ) t,
					t_user u where t.u_id = u.user_id
					limit #{start},#{end}
	</select>
	<select id="queryMyShareByPage" resultMap="shareResultMap">
		select s.s_id,s.type,s.subject,s.content,date_format(s.s_time,'%Y-%m-%d') as 's_time',
		date_format(s.lastmodifytime,'%Y-%m-%d %h:%i %p') as 'lastmodifytime',
		s.attachments,s.grade,s.stu_num,s.grade_num,s.ad_grade from 
		t_share s, t_user u 
		where s.u_id=u.user_id and s.u_id = #{userId} order by s.s_id DESC limit #{start},#{end}
	</select>
	
	<select id="queryShareListByUserId" resultMap="shareResultMap">
		select s.s_id,s.type,s.subject,s.content,date_format(s.s_time,'%Y-%m-%d') as 's_time',
		date_format(s.lastmodifytime,'%Y-%m-%d %h:%i %p') as 'lastmodifytime',
		s.attachments,s.grade,s.stu_num,s.grade_num,s.ad_grade from 
		t_share s, t_user u 
		where s.u_id=u.user_id and u_id = #{userId} order by s_time DESC
	</select>
	<select id="queryShareById" resultMap="shareResultMap">
		select s.*,u.* from t_share s, t_user u where s_id = #{0} and s.u_id = u.user_id
	</select>
	
	<select id="queryAllShareCounts" resultType="Integer">
		select count(*) from t_share
	</select>
	
	<select id="queryMyShareCounts" resultType="Integer">
		select count(*) from t_share where u_id = #{userId}
	</select>
	
	<select id="queryOthersShareCounts" resultType="Integer">
		select count(*) from t_share where u_id != #{userId}
	</select>
	
	<update id="updateShare">
		<!--
		update t_share set type=#{type,jdbcType=VARCHAR},subject=#{subject,jdbcType=VARCHAR},content=#{content,jdbcType=VARCHAR},
		       u_id=#{u_id,jdbcType=INTEGER},
               s_time=#{s_time,jdbcType=DATE},attachments=#{attachments,jdbcType=VARCHAR},grade=#{grade,jdbcType=DOUBLE},
               stu_num=#{stu_num,jdbcType=INTEGER},grade_num=#{grade_num,jdbcType=INTEGER},ad_grade=#{ad_grade,jdbcType=INTEGER}
               where s_id=#{s_id,jdbcType=INTEGER}
               -->
        update t_share 
		<set>
			<if test="type != null and type != ''">
				type=#{type,jdbcType=VARCHAR},
			</if>
			<if test="subject != null and subject != ''">
				subject=#{subject,jdbcType=VARCHAR},
			</if>
			<if test="content != null and content != ''">
				content=#{content,jdbcType=VARCHAR},
			</if>
			<!--分享人id和分享时间，附件不允许更新
			<if test="u_id != null and u_id != ''">
				u_id=#{u_id,jdbcType=INTEGER},
			</if>
			
			<if test="s_time != null and s_time != ''">
				s_time=#{s_time,jdbcType=DATE},
			</if>
			
			<if test="attachments != null and attachments != ''">
				attachments=#{attachments,jdbcType=VARCHAR},
			</if>
			
			
			<if test="grade != null and grade != ''">
				grade=#{grade,jdbcType=DOUBLE},
			</if>
			<if test="grade_num != null and grade_num != ''">
				grade_num=#{grade_num,jdbcType=INTEGER},
			</if>
			-->
			<if test="ad_grade != null and ad_grade != ''">
				ad_grade=#{ad_grade,jdbcType=DOUBLE},
			</if>
			
			<if test="ud_time != null and ud_time != ''">
				lastmodifytime=#{ud_time,jdbcType=TIMESTAMP},
			</if>
			<if test="stu_num != null and stu_num != ''">
				stu_num=#{stu_num,jdbcType=INTEGER},
			</if>
			
			
			
		</set>
			where s_id=#{s_id,jdbcType=INTEGER}
	</update>
	<!--更新各个字段  ad_grade,jdbcType=INTEGER  S_id,jdbcType=INTEGER-->
	<update id="updateShare_gradeNum">
		update t_share set grade_num=#{grade_num} where s_id=#{s_id}
	</update>
	
	<update id="updateShare_grade">
		update t_share set grade=#{grade} where s_id=#{s_id}
	</update>
	
	<update id="updateAdminGrade">
		update t_share set ad_grade=#{ad_grade} where s_id=#{s_id}
	</update>
	 
	<insert id="insertShare" parameterType="com.lihui.share.entity.Share"> 
        insert into t_share(type,subject,content,u_id,s_time,attachments,grade,stu_num,grade_num,ad_grade) 
               values(#{type,jdbcType=VARCHAR},#{subject,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR},#{u_id,jdbcType=INTEGER},
               #{s_time,jdbcType=DATE},#{attachments,jdbcType=VARCHAR},#{grade,jdbcType=DOUBLE},
               #{stu_num,jdbcType=INTEGER},#{grade_num,jdbcType=INTEGER},#{ad_grade,jdbcType=INTEGER})  
    </insert>
    
    <delete id="deleteShareById" parameterType="Integer">
    	delete from t_share where s_id=#{s_id}
    </delete>
    
    <delete id="deleteShareByUserId" parameterType="Integer">
    	delete from t_share where u_id=#{userId}
    </delete>
</mapper>